import{useRef as t,useState as e,useEffect as i}from"react";import{FormRunner as r}from"form-runner";function n(t,e,i,r){return new(i||(i=Promise))((function(n,o){function d(t){try{s(r.next(t))}catch(t){o(t)}}function l(t){try{s(r.throw(t))}catch(t){o(t)}}function s(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(d,l)}s((r=r.apply(t,e||[])).next())}))}function o(i,n,o){const d=t(new r(i,n,o)).current,[,l]=e(0);function s(){l((t=>t+1))}return{errorFlatList:d.errorFlatList,errors:d.errors,touched:d.touched,dirty:d.dirty,getFieldState:function(t,e,i){return d.getFieldState(t,e,i)},getFieldTouched:function(t){return d.getFieldTouched(t)},setFieldTouched:function(t,e){d.setFieldTouched(t,e),s()},setFieldsTouched:function(t,e){d.setFieldsTouched(t,e),s()},setTouchedAll:function(t){d.setTouchedAll(t),s()},getFieldDirty:function(t){return d.getFieldDirty(t)},setFieldDirty:function(t,e){d.setFieldDirty(t,e),s()},setFieldsDirty:function(t,e){d.setFieldsDirty(t,e),s()},setDirtyAll:function(t){d.setDirtyAll(t),s()},getFieldValid:function(t){return d.getFieldValid(t)},getFieldErrors:function(t){return d.getFieldErrors(t)},isFormDirty:function(){return d.isFormDirty()},isFormValid:function(){return d.isFormValid()},validateAsync:function(t){return d.validateAsync(t).then((t=>(s(),t)))}}}function d(t,r,d){const[l,s]=e(!1),{errorFlatList:u,errors:c,touched:F,dirty:a,getFieldTouched:y,setFieldTouched:f,setFieldsTouched:h,setTouchedAll:g,getFieldDirty:D,setFieldDirty:m,setFieldsDirty:T,setDirtyAll:A,getFieldValid:v,getFieldErrors:p,getFieldState:S,isFormDirty:V,isFormValid:E,validateAsync:w}=o(t,r,d);function L(){var t=!1;return(()=>{n(this,void 0,void 0,(function*(){return yield w(r).then((e=>t=e)).catch((()=>t=!1))}))})(),t}return i((()=>{L()}),[]),{errorFlatList:u,errors:c,touched:F,dirty:a,isSubmitting:l,isFormDirty:V,isFormValid:E,validateAsync:w,validate:L,setIsSubmitting:function(t){s(t)},getFieldState:S,getFieldTouched:y,setFieldTouched:f,setFieldsTouched:h,setTouchedAll:g,getFieldDirty:D,setFieldDirty:m,setFieldsDirty:T,setDirtyAll:A,getFieldValid:v,getFieldErrors:p}}"function"==typeof SuppressedError&&SuppressedError;const l=d;export{o as useFormFieldState,l as useFormRunner,d as useFormValidation};
//# sourceMappingURL=main.mjs.map
